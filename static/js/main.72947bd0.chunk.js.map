{"version":3,"sources":["styles/NavbarStyles.js","hooks/useToggleState.js","contexts/ThemeContext.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","PageContent.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","initialState","useState","state","setstate","toggle","ThemeContext","createContext","ThemeProvider","props","useToggleState","isDarkMode","toggleTheme","Provider","value","children","LanguageContext","LanguageProvider","language","setlanguage","changeLanguage","e","target","content","english","flag","french","spanish","withStyles","useContext","classes","className","AppBar","Toolbar","IconButton","role","aria-label","Typography","variant","Switch","onChange","InputBase","placeholder","input","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","email","signIn","password","remember","Paper","Avatar","Select","MenuItem","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","name","autoFocus","FormControlLabel","control","label","Button","type","PageContent","console","log","style","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72947bd0.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginBottom: 0\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(9),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(10),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { useState } from \"react\";\r\nexport default (initialState = false) => {\r\n  const [state, setstate] = useState(initialState);\r\n  const toggle = () => {\r\n    setstate(!state);\r\n  };\r\n  return [state, toggle];\r\n};\r\n","import React, { createContext } from \"react\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n  const [isDarkMode, toggleTheme] = useToggleState(false);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\nexport const LanguageContext = createContext();\r\nexport function LanguageProvider(props) {\r\n  const [language, setlanguage] = useState(\"english\");\r\n\r\n  const changeLanguage = e => setlanguage(e.target.value);\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage }}>\r\n      {props.children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles/NavbarStyles\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\nimport { LanguageContext } from \"./contexts/LanguageContext\";\r\n\r\nconst content = {\r\n  english: {\r\n    search: \"Search\",\r\n    flag: \"ðŸš“\"\r\n  },\r\n  french: {\r\n    search: \"Chercher\",\r\n    flag: \"ðŸš‡\"\r\n  },\r\n  spanish: {\r\n    search: \"Busar\",\r\n    flag: \"ðŸš—\"\r\n  }\r\n};\r\nfunction Navbar(props) {\r\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\r\n  const { language } = useContext(LanguageContext);\r\n  const { classes } = props;\r\n\r\n  const { search, flag } = content[language];\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color={isDarkMode ? \"default\" : \"primary\"}>\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\">\r\n            <span role=\"img\" aria-label=\"emoji\">\r\n              {flag}\r\n            </span>\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\r\n            App Title\r\n          </Typography>\r\n          <Switch onChange={toggleTheme} />\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder={`${search}...`}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","const styles = theme => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckBox from \"@material-ui/core/CheckBox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from \"./styles/FormStyles\";\r\nimport { LanguageContext } from \"./contexts/LanguageContext\";\r\nconst words = {\r\n  english: {\r\n    email: \"Email Address\",\r\n    signIn: \"Sign In\",\r\n    password: \"Password\",\r\n    remember: \"Remember Me\"\r\n  },\r\n  french: {\r\n    email: \"Se Connecter\",\r\n    signIn: \"Adresse Electronique\",\r\n    password: \"Mot de Passe\",\r\n    remember: \"Souviens-toi De Moi\"\r\n  },\r\n  spanish: {\r\n    email: \"Registrase\",\r\n    signIn: \"Correo Electronico\",\r\n    password: \"Contrasena\",\r\n    remember: \"Recuerdame\"\r\n  }\r\n};\r\nfunction Form(props) {\r\n  const { language, changeLanguage } = useContext(LanguageContext);\r\n  const { classes } = props;\r\n  const { email, signIn, password, remember } = words[language];\r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{signIn}</Typography>\r\n        <Select value={language} onChange={changeLanguage}>\r\n          <MenuItem value=\"english\">English</MenuItem>\r\n          <MenuItem value=\"french\">French</MenuItem>\r\n          <MenuItem value=\"spanish\">Spanish</MenuItem>\r\n        </Select>\r\n        <form className={classes.form}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\r\n            <Input id=\"name\" name=\"email\" autoFocus></Input>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\r\n            <Input id=\"password\" name=\"password\"></Input>\r\n          </FormControl>\r\n          <FormControlLabel\r\n            control={<CheckBox color=\"primary\" />}\r\n            label={remember}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {signIn}\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\n\r\nexport default function PageContent(props) {\r\n  console.log(\r\n    \"Enter icon icon by Icons8\",\r\n    \"https://icons8.com/icons/set/enter-2\"\r\n  );\r\n\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const styles = {\r\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\r\n    height: \"100vh\",\r\n    width: \"100vw\"\r\n  };\r\n  return <div style={styles}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\nimport PageContent from \"./PageContent\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <LanguageProvider>\n        <PageContent>\n          <Navbar />\n          <Form />\n        </PageContent>\n      </LanguageProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}